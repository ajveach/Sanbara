{"version":3,"sources":["webpack:///webpack/bootstrap 8730f83a126426677d4a","webpack:///./src/controller.js","webpack:///./../src/shared/systemController/SystemController.class.js","webpack:///./../src/shared/system/System.class.js","webpack:///./../src/shared/scene/Scene.class.js","webpack:///./src/scenes/Play.Scene.js","webpack:///./../adapters/rendering/THREE.js/THREE.adapter.js","webpack:///./src/BallSpinner.System.js","webpack:///./src/Ball.Node.js","webpack:///./../src/shared/scene/Node.class.js","webpack:///./../src/public/renderer/RendererController.class.js"],"names":[],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8730f83a126426677d4a\n **/","import SystemController from \"../../src/shared/systemController/SystemController.class\";\r\nimport PlayScene from \"./scenes/Play.Scene\";\r\nimport BallSpinnerSystem from \"./BallSpinner.System\";\r\n\r\nimport THREEAdapter from \"../../adapters/rendering/THREE.js/THREE.adapter\";\r\n\r\nvar systemController = new SystemController({});\r\n\r\n// Add renderer controller to system controller\r\nsystemController.rendererController = new THREEAdapter();\r\n\r\n// Add scene to system controller. First scene will be default scene\r\nsystemController.addScene(new PlayScene());\r\n\r\nsystemController.addSystem(new BallSpinnerSystem({}));\r\n\r\nsystemController.loadScene(\"Play\");\r\n\r\nexport default systemController;\n\n\n/** WEBPACK FOOTER **\n ** ./src/controller.js\n **/","import System from \"../system/System.class\";\r\nimport Scene from \"../scene/Scene.class\";\r\nimport RendererController from \"../../public/renderer/RendererController.class\";\r\n\r\nexport default class SystemController{\r\n  constructor(){\r\n    var controller = this;\r\n\r\n    this._scenes = {};\r\n    this._systems = {};\r\n\r\n    window.addEventListener(\"resize\",function(){\r\n      // Call method in anonymous function in order to maintain proper this value\r\n      controller.onWindowResize();\r\n    });\r\n  }\r\n\r\n  get scenes(){\r\n    return this._scenes;\r\n  }\r\n\r\n  addScene(scene){\r\n    if(!scene instanceof Scene){\r\n      throw new Error(\"The scene provided is not valid\");\r\n    }\r\n\r\n    this._scenes[scene.name] = scene;\r\n\r\n    scene.systemController = this;\r\n\r\n    // Set as current scene if none exist\r\n    if(!this.currentScene){\r\n      this.currentScene = scene;\r\n    }\r\n  }\r\n\r\n  loadScene(name){\r\n    if(!this._scenes[name]){\r\n      throw new Error(\"No scene has been created with the name \\\"\"+name+\"\\\"\");\r\n    }\r\n\r\n    var systemController = this;\r\n    \r\n    // Trigger onSceneLoad method on rendererController to let it know the scene is about to change\r\n    this.rendererController.onSceneLoad(this.currentScene, this._scenes[name],function(){\r\n      // This callback is required to ensure all of the pre-loading logic for the renderer is complete\r\n\r\n      systemController._scenes[name].Load(function(){\r\n        systemController.currentScene = systemController._scenes[name];\r\n        // Start animation\r\n        systemController.rendererController.startAnimation();\r\n      });\r\n    });\r\n  }\r\n\r\n  get currentScene(){\r\n    return this._currentScene;\r\n  }\r\n\r\n  set currentScene(value){\r\n    this._currentScene = value;\r\n  }\r\n\r\n  get systems(){\r\n    return this._systems;\r\n  }\r\n\r\n  addSystem(system){\r\n    if(!system instanceof System){\r\n      throw new Error(\"The system provided is not valid\");\r\n    }\r\n\r\n    system.controller = this;\r\n\r\n    this._systems[system.name] = system;\r\n  }\r\n\r\n  get rendererController(){\r\n    return this._rendererController;\r\n  }\r\n\r\n  set rendererController(rendererController){\r\n    if(!rendererController instanceof RendererController){\r\n      throw new Error(\"The renderer provided is not valid\");\r\n    }\r\n\r\n    this._rendererController = rendererController;\r\n    rendererController.systemController = this;\r\n  }\r\n\r\n  /**\r\n   * Method to call appropriate logic when window is resized \r\n   */\r\n  onWindowResize(){\r\n    // Call onResize method for rendererController\r\n    this.rendererController.onResize();\r\n\r\n    // Call onResize method of current scene\r\n    this.currentScene.onResize();\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./../src/shared/systemController/SystemController.class.js\n **/","export default class System{\r\n  constructor(options){\r\n    this.name = options.name;\r\n  }\r\n\r\n  set name(value){\r\n    if(typeof value !== \"string\"){\r\n      throw new Error(\"The name provided for this system is not valid\");\r\n    }\r\n\r\n    this._name = value;\r\n  }\r\n\r\n  get name(){\r\n    return this._name;\r\n  }\r\n\r\n  set controller(value){\r\n    this._controller = value;\r\n  }\r\n\r\n  get controller(){\r\n    return this._controller;\r\n  }\r\n\r\n  // Placeholder method that should be overridden by each system\r\n  onSceneLoad(){}\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./../src/shared/system/System.class.js\n **/","export default class Scene{\r\n  constructor(){\r\n    this.nodes = [];\r\n\r\n    this._active = false;\r\n    \r\n    // This will be set by the system controller when the scene is added\r\n    this.systemController = null;\r\n  }\r\n\r\n  get active(){\r\n    return this._active;\r\n  }\r\n\r\n  add(node){\r\n    this.nodes.push(node);\r\n    this.systemController.rendererController.onNodeAdded(node)\r\n  }\r\n\r\n  // Method to start the loading process for this scene\r\n  Load(next){\r\n    this._active = true;\r\n\r\n    // Perform scene's logic before loading begins\r\n    this.onLoad();\r\n    \r\n    // Perform systems logic for scene load\r\n    for(let name in this.systemController.systems){\r\n      if(!this.systemController.systems.hasOwnProperty(name)){\r\n        continue;\r\n      }\r\n      \r\n      this.systemController.systems[name].onSceneLoad(this);\r\n    }\r\n\r\n    // this.afterLoad();\r\n\r\n    next();\r\n  }\r\n\r\n  // Method called when scene begins loading\r\n  onLoad(){\r\n\r\n  }\r\n\r\n  // Method to start the unloading process for this scene\r\n  Unload(){\r\n\r\n  }\r\n\r\n  // Method called when window is resized and this is the current scene\r\n  onResize(){\r\n  }\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../src/shared/scene/Scene.class.js\n **/","import Scene from \"../../../src/shared/scene/Scene.class\";\r\nimport THREEAdapter from \"../../../adapters/rendering/THREE.js/THREE.adapter\";\r\n\r\nexport default class Play extends Scene{\r\n  constructor(){\r\n    super();\r\n\r\n    this.name = \"Play\";\r\n  }\r\n\r\n  onResize(){\r\n    super.onResize();\r\n  }\r\n\r\n  onLoad(){\r\n    \r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/scenes/Play.Scene.js\n **/","import RendererController from \"../../../src/public/renderer/RendererController.class.js\";\r\n\r\nvar supportedRevision = \"78\";\r\n\r\nexport default class THREERenderer extends RendererController{\r\n  constructor(options){\r\n    super();\r\n    \r\n    options = options || {};\r\n\r\n    // sanbara requires the dimensions be set for system logic\r\n    this.dimensions = 3;\r\n    // A name is required for renderer adapters\r\n    this.name = \"THREE.js\";\r\n    \r\n    var THREE = window.THREE;\r\n\r\n    // Verify three.js is available\r\n    if(!THREE){\r\n      throw new Error(\"THREE cannot be found.\");\r\n    }\r\n\r\n    // Check revision number and warn user if it doesn't match the expected one\r\n    if(THREE.REVISION !== supportedRevision){\r\n      console.log(\"Warning: Currently using THREE revision \" + THREE.REVISION + \" but the Sanbara adapter supports revision \" + supportedRevision);\r\n    }\r\n\r\n    // Create container object for all THREE type properties\r\n    this.THREE = {};\r\n  }\r\n\r\n  startAnimation(){\r\n    var rendererController = this,\r\n        THREE = this.THREE;\r\n    \r\n    var animate = function(){\r\n      requestAnimationFrame(animate);\r\n      rendererController.frameStart(THREE.scene);\r\n      THREE.renderer.render(THREE.scene, THREE.camera);\r\n    };\r\n\r\n    animate();\r\n  }\r\n\r\n  onResize(){\r\n    super.onResize();\r\n    console.log(2);\r\n  }\r\n\r\n  onSceneLoad(unloadingScene, loadingScene, next){\r\n    super.onSceneLoad();\r\n\r\n    // Create THREE camera\r\n    this.THREE.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\r\n    this.THREE.camera.position.z = 30;\r\n\r\n    // Create THREE scene\r\n    this.THREE.scene = new THREE.Scene();\r\n\r\n    // Create renderer\r\n    this.THREE.renderer = new THREE.WebGLRenderer();\r\n    this.THREE.renderer.setSize( window.innerWidth, window.innerHeight);\r\n\r\n    // Append dom element as terget of renderer\r\n    document.body.appendChild(this.THREE.renderer.domElement);\r\n\r\n    // The next callback must be called. If it is passed to the super method it will be called there, but if logic needs to happen in this method, do not pass it to the super method.\r\n    next();\r\n  }\r\n  \r\n  onNodeAdded(node){\r\n    super.onNodeAdded(node);\r\n    \r\n    // A node has been added to the sanbara scene. Add it to the THREE scene\r\n    if(!node.mesh){\r\n      throw new Error(\"When using the three.js adapter, all nodes must include a mesh property.\");\r\n    }\r\n\r\n    this.THREE.scene.add(node.mesh);\r\n  }\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../adapters/rendering/THREE.js/THREE.adapter.js\n **/","import System from \"../../src/shared/system/System.class\";\r\nimport Ball from \"./Ball.Node\";\r\n\r\nexport default class BallSpinner extends System{\r\n  constructor(options){\r\n    options.name = options.name || \"BallSpinner\";\r\n    super(options);\r\n  }\r\n\r\n  onSceneLoad(scene){\r\n    var ballNode = new Ball({});\r\n    scene.add(ballNode);\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/BallSpinner.System.js\n **/","import Node from \"../../src/shared/scene/Node.class\";\r\n\r\nexport default class Ball extends Node{\r\n  constructor(options){\r\n    super(options);\r\n\r\n    var THREE = window.THREE;\r\n    var geometry = new THREE.SphereGeometry( 15, 8, 6 );\r\n    var material = new THREE.MeshBasicMaterial( {color: 0x00aaff} );\r\n    this.mesh = new THREE.Mesh( geometry, material );\r\n  }\r\n\r\n  update(){\r\n    super.update();\r\n\r\n    this.mesh.rotation.x += 0.01;\r\n    this.mesh.rotation.y += 0.02;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Ball.Node.js\n **/","export default class Node{\r\n  constructor(){\r\n\r\n  }\r\n\r\n  update(){\r\n    \r\n  }\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../src/shared/scene/Node.class.js\n **/","export default class RendererController{\r\n  constructor(options){\r\n\r\n  }\r\n\r\n  // The frameStart method calls each node's update method\r\n  frameStart(){\r\n    for(const node of this.systemController.currentScene.nodes){\r\n      node.update();\r\n    }\r\n  }\r\n\r\n  onResize(){\r\n    console.log(1);\r\n  }\r\n\r\n  onSceneLoad(unloadingScene, loadingScene, next){\r\n    if(typeof next === \"function\"){\r\n      next();\r\n    }\r\n  }\r\n\r\n  onNodeAdded(node){\r\n    \r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./../src/public/renderer/RendererController.class.js\n **/"],"sourceRoot":""}